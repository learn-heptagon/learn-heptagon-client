const n:int = 100

node pp(x:float) returns(o1,o2:float)
let
  o1 = x;
  o2 = x
tel

node f() returns (o:float)
var u,v:float^n at r;
let
  init<<r>> u = [1.0^n with [0] = 0.0];
  v = [u with [n-1] = 0.0];
  o = v[28]
tel

node g() returns (o:float)
var u,v:float^n at r; z:float^n;
let
  (init<<r>> u, z) = map<<n>> pp(0.0^n);
  v = [u with [n-1] = 0.0];
  o = v[28]
tel

node main() returns (o1,o2:float)
let
  o1 = f();
  o2 = g();
tel
